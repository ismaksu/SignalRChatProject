
@{
    ViewData["Title"] = "Chat";
    Layout = "~/Views/Shared/_Layout.cshtml";

    //string receivedClass = "rounded-bottom rounded-end bg-gradient bg-orange p-3 ps-1 py-2 text-wrap received";
    //string sendedClass = "rounded-bottom rounded-start bg-gradient bg-primary p-3 pe-1 py-2 text-wrap sended";

    string[] receivedClass =
            {
                "d-grid col-12 justify-content-start",
                "rounded-bottom rounded-end bg-gradient bg-orange p-3 ps-1 py-2 text-wrap received"
            };

    string[] sendedClass =
            {
                "d-grid col-12 justify-content-end",
                "rounded-bottom rounded-start bg-gradient bg-primary p-3 pe-1 py-2 text-wrap sended"
            };
}
<style>

    .message {
        width: 100% !important;
        margin-bottom: -7px !important;
    }

    .float-end {
        width: 35%;
    }

    input:focus {
        box-shadow: none !important;
    }

    .bg-orange {
        background-color: #ff6a00 !important;
    }

    .btn:focus {
        box-shadow: none !important;
    }

    .chatBox {
        text-anchor: end;
        overflow: auto;
        height: 70vh;
    }

    .justifyStart {
        justify-self: start !important;
    }

    .justifyEnd {
        justify-self: end !important;
    }
</style>



<div id="beforeCheck" class="visible">
    <div class="container">
        <div class="row align-items-center justify-content-center">
            <div class="col-12 col-lg-7 p-5 rounded-pill border border-primary shadow">
                <h4 class="text-center">
                    Chat Giriş Ekranı<br />
                    <small class="text-primary">Lütfen devam edebilmek için kullanıcı adınızı giriniz..</small>
                </h4>
                <br />
                <input type="text" id="userInput" class="form-control rounded-pill" placeholder="Kullanıcı adı.." />
                <br />
                <button class="btn btn-outline-primary rounded-pill col-12" onclick="loginCheck();">Giriş Yap!</button>
            </div>
        </div>
    </div>
</div>

<div id="afterCheck" class="d-none d-grid">
    <div class="container">
        <div class="row text-center">
            <h3>Asp.Net Core (5) <b>SignalR Realtime Chat</b></h3>
            <div class="h5">
                Total Views: <b id="viewCounter">0</b> &nbsp;
                Total Users: <b id="userCounter">0</b>
            </div>

            <div class="row justify-content-center text-center">
                <div class="col-12 col-lg-9 border border-success p-2 shadow mt-3 rounded-3" style="margin-left: -15px;">
                    <div class="col-12 P-3 bg-dark shadow text-white rounded-2 mb-3 chatBox">
                        <div class="p-1 mb-0 pb-0 d-grid" id="messageBox">

                        </div>
                    </div>
                    <div class="rounded border border-success ps-1">
                        <div class="row p-1 ps-0 pe-0 me-0">
                            <div class="col-10">
                                <input id="txtBox" type="text" class="form-control border-2" placeholder="Enter a message.." required />
                            </div>
                            <div class="col-2 justify-content-center ps-0">
                                <button class="btn btn-primary px-4" onclick="addMessage();">Yolla!</button>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="col-12 col-lg-3 p-3 ms-lg-1 mt-3 rounded border border-3 border-primary shadow text-center">
                    <h2><button class="btn btn-outline-success col-12" data-toggle="modal" data-target="#usersModal">Tüm Kullanıcılar</button></h2>
                    <hr />
                    <h4>Odalar</h4>
                    <hr />
                    <div class="btn-group-vertical col-12" role="group" aria-label="Vertical radio toggle button group">
                        <input type="radio" class="btn-check" name="rooms" id="radio0" autocomplete="off" checked>
                        <label class="btn btn-outline-primary" for="radio0">Tümü</label>
                        <input type="radio" class="btn-check" name="rooms" id="radio1" autocomplete="off">
                        <label class="btn btn-outline-primary" for="radio1">Oda 1</label>
                        <input type="radio" class="btn-check" name="rooms" id="radio2" autocomplete="off">
                        <label class="btn btn-outline-primary" for="radio2">Oda 2</label>
                        <input type="radio" class="btn-check" name="rooms" id="radio3" autocomplete="off">
                        <label class="btn btn-outline-primary" for="radio3">Oda 3</label>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<div class="modal" id="usersModal">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h4>Aktif Kullanıcı Listesi</h4>
            </div>
            <div class="modal-body">
                Deneme
                Denemeee
            </div>
        </div>
    </div>
</div>

@section Scripts{
    <script src="~/js/signalr.js" type="text/javascript"></script>

    <script>
        function scrollBottom() {
            const chatdiv = $(".chatBox");
            chatdiv.scrollTop(chatdiv[0].scrollHeight);
        }

        let username = "Undefined User";
        function loginCheck() {
            username = $("#userInput").val();
            if (!username) {
                username = "Undefined User";
            }
            $("#beforeCheck").remove();
            $("#afterCheck").removeClass("d-none");
        }
        function addMessage() {
            let sendedMessage = $("#txtBox").val();
            sendMessageClient(username, sendedMessage);

            let sendedMessageHtml = `<div class='@sendedClass[0]'><div class='d-flex message mb-0'><p class='@sendedClass[1]'>${sendedMessage} &nbsp; <b class="bg-dark bg-gradient rounded-3 p-1">${username}</b></p></div></div>`;

            $("#messageBox").append(sendedMessageHtml);
            scrollBottom();
            $("#txtBox").val("");
        }
        function receiveMessage(username, message) {
            let receivedMessageHtml = `<div class='@receivedClass[0]'><div class='d-flex message mb-0'><p class='@receivedClass[1]'><b class="bg-dark bg-gradient rounded-3 p-1">${username}</b> ${message}</p></div></div>`;
            $("#messageBox").append(receivedMessageHtml);
            scrollBottom();
        }

        var userCountConnection = new signalR.HubConnectionBuilder().withUrl("/hubs/userCount").build();

        userCountConnection.on("updateTotalViews", (count) => {
            $("#viewCounter").html(count);
            console.log(`${value} has joined the room!`);
        });
        userCountConnection.on("updateTotalUsers", (value) => {
            $("#userCounter").html(value);
        });
        userCountConnection.on("sendMessage", (user, value) => {
            receiveMessage(user, value);
        });

        function sendMessageClient(user, message) {
            userCountConnection.send("SendMessage", user, message);
        }

        function newWindowLoaded() {
            userCountConnection.send("WindowAdded");
        }

        function fulFilled() {
            console.log("Connection successful at the 'userCount' hub.");
            newWindowLoaded();
        }

        function rejected() {
            console.log("Connection failed with 'userCount' hub");
        }

        userCountConnection.start().then(fulFilled, rejected);
    </script>
}
